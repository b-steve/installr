#!/bin/bash

## Flags:
## -r to roxygenise.
## -c to compile C++ code.
## -f to do full CRAN checks.
## -h to print help.
## -n to provide package name.
## -t to compile TMB code.
## -q to suppress testing.
## -d to suppress cleaning.

doroxygenise=false
docompile=false
docompiletmb=false
dohelp=false
doname=false
dotest=true
doclean=true
docran=false
while getopts ":cdfhn:qrt" opt; do
    case $opt in
	c)
	    docompile=true
	    ;;
	d)
	    doclean=false
	    ;;
	f)
	    docran=true
	    ;;
	h)
	    dohelp=true
	    ;;
	n)
	    dirname=$OPTARG
	    doname=true
	    ;;
	q)
	    dotest=false
	    ;;
	r)
	    doroxygenise=true
	    ;;
	t)
	    docompiletmb=true
	    ;;
    esac
done

dir=${!OPTIND}

## Printing argument help.
if [ "$dohelp" = true ]; then
    echo "-r to roxygenise.
-c to compile C++ code.
-h to print help.
-n to provide package name.
-t to compile TMB code.
-q to suppress testing.
-d to suppress cleaning."
fi

## Throwing error for no argument provided.
if [ -z "$dir" ]; then
    echo "ERROR: No directory given." >&2
    exit 1
fi

## Moving into directory.
cd "$dir"
## Getting package name.
if [ "$doname" = false ]; then
    dirname=${PWD##*/}  
fi
echo "dirname is $dirname"
## Cleaning.
if [ "$doclean" = true ]; then
    echo "Cleaning..."
    rm -rfv package-build
fi
## Roxygenisation.
if [ "$doroxygenise" = true ]; then
    echo "Roxygenising..."
    rm -rfv man NAMESPACE
    R --slave -e "library(roxygen2); roxygenise('.')"
fi
## Compiling C++ code.
if [ "$docompile" = true ]; then
    echo "Compiling C++ code..."
    rm -rfv src/*.o src/RcppExports.cpp R/RcppExports.R
    R --slave -e "library(Rcpp); compileAttributes()"
    rm -rfv src/*.o src/*.so src/*.rds src-i386/ src-x64/
fi
## Building package.
R CMD build .
## Moving compressed package.
mkdir -p package-build
mv "$dirname"_*.tar.gz package-build/
## Checking package.
teststr="--no-tests"
if [ "$dotest" = true ]; then
    teststr=""
fi
cranstr=""
if [ "$docran" = true ]; then
    cranstr="--as-cran"
fi

R CMD check package-build/"$dirname"_*.tar.gz $cranstr $teststr
## Installing package.
R CMD INSTALL --install-tests package-build/"$dirname"_*.tar.gz
## Compiling TMB code. Package must have a function named compile.[packagename]().
if  [ "$docompiletmb" = true ]; then
    echo "Compiling TMB code..."
    tmbstr="library($dirname); compile.$dirname()"
    R --slave -e "$tmbstr"
fi
